server {
    listen              443 ssl http2 default_server;
    listen              [::]:443 ssl http2 default_server;
    server_name         ${PROXY_DOMAIN};
    root                /var/www/${PROXY_DOMAIN}/public;

    # SSL
    ssl_certificate     /opt/CA/certs/proxy/proxy.crt;
    ssl_certificate_key /opt/CA/certs/proxy/proxy.pem;

    # client certificate authentication (root CA certificate)
    ssl_client_certificate /opt/CA/ca.crt;
    # make verification optional so we can not require it on admin routes
    ssl_verify_client optional;

    # security
    include             nginxconfig.io/security.conf;

    # restrict methods
    if (${DOLLAR}request_method !~ ^(GET|POST|PUT|PATCH|DELETE)${DOLLAR}) {
        return '405';
    }

    # logging
    error_log /var/log/nginx/${PROXY_DOMAIN}.error.log warn;

    # agent routes
    location /agent {
        # if the client-side certificate failed to authenticate, return 403
        if (${DOLLAR}ssl_client_verify != SUCCESS) {
            return 403;
        }

        proxy_set_header        Host ${DOLLAR}host;
        proxy_set_header        X-Real-IP ${DOLLAR}remote_addr;
        proxy_set_header        X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto ${DOLLAR}scheme;

        proxy_pass http://commander:5000${DOLLAR}request_uri;
        include    nginxconfig.io/proxy.conf;
    }

    # WebSocket agent checkin
    location /agent/checkin {
        # if the client-side certificate failed to authenticate, return 403
        if (${DOLLAR}ssl_client_verify != SUCCESS) {
            return 403;
        }
        proxy_pass http://commander:5000/agent/checkin;
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade ${DOLLAR}http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host ${DOLLAR}host;
    }

    # admin API routes
    location /admin {
        proxy_set_header        Host ${DOLLAR}host;
        proxy_set_header        X-Real-IP ${DOLLAR}remote_addr;
        proxy_set_header        X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto ${DOLLAR}scheme;

        proxy_pass http://commander:5000${DOLLAR}request_uri;
        include    nginxconfig.io/proxy.conf;
    }

    # additional config
    include nginxconfig.io/general.conf;
}

# HTTP redirect
server {
    listen      80 default_server;
    listen      [::]:80 default_server;
    server_name .${PROXY_DOMAIN};
    return      301 https://${PROXY_DOMAIN}${DOLLAR}request_uri;
}