version: "3.9"
services:
  mongo:
    container_name: "mongo"
    image: "mongo:5"
    volumes:
      - ./volumes/mongo:/data/db
    networks:
      - backend
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
  capy:
    container_name: "capy"
    image: "ghcr.io/lawndoc/capy:main"
    volumes:
      - ./volumes/capy:/opt/CAPy/CA
    networks:
      - backend
    environment:
      SECRET_KEY: ${SECRET_KEY}
      CA_NAME: "Commander CA"
      CA_CERT_DIR: "/opt/CAPy/CA"
      PROXY_DOMAIN: ${PROXY_DOMAIN}
    restart: always
  commander:
    container_name: "commander"
    image: "ghcr.io/lawndoc/commander:main"
    depends_on:
      - mongo
      - capy
    volumes:
      - ./volumes/commander/library:/opt/commander/library
    networks:
      - application
      - backend
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_URI: mongodb://mongo
      CA_HOSTNAME: "capy"
      UPLOADS_DIR: "/opt/commander/library/"
    restart: always
  nginx:
    container_name: "nginx"
    image: "nginx:stable"
    depends_on:
      - commander
      - capy
    volumes:
      - ./Nginx:/etc/nginx
      - ./volumes/capy${HOSTNAME}:/opt/CA:ro
    networks:
      - frontend
      - application
    ports:
      - "443:443"
    environment:
      PROXY_DOMAIN: ${PROXY_DOMAIN}
    restart: always

networks:
  frontend:
  application:
  backend: